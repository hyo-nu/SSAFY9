(1) 스택을 이용해 괄호가 정상적으로 표시되어 있는지 검사하는 알고리즘에 대해 간단히 설명하라.

    요약 = 괄호 요소를 Stack에 담으며 정상적으로 괄호가 쓰였는지 판단합니다.

    1. 여는 괄호가 들어 오는 경우 Stack 에 push 한다.

    2. 닫는 괄호가 들어 오는 경우 Stack의 요소를 판단한다.
        (1) Stack의 꼭대기 요소가 같은 종류의 여는괄호인 경우 : Stack의 꼭대기 요소만 pop을 한다.
        (2) Stack의 꼭대기 요소가 다른 종류의 여는 괄호인 경우 : 같은 종류의 괄호짝을 이루지 못했기에 error
        (3) Stack이 비어있는 경우 : 닫는 괄호가 여는괄호와 짝을 이루지 못했기에 error

    3. 검사가 종료 된 후
        (1) Stack이 비어있는 경우 : 올바르게 괄호가 쓰여졌다.
        (2) Stack에 여는 괄호가 남는 경우 : error


(2)위의 문자열을 스택을 이용해 검사하는 과정에 대해,나머지 단계의 스택 내부 상태를 표시하고 간단히 설명하라.
마지막에는 괄호가 정상인지 오류인지와 그 이유를 설명해야한다.

스택은 [ ]로 표시하고, 저장 원소의 구분은 쉼표나 빈 칸으로 표시한다.

[ ( ] # 여는 괄호를 만나 push
[ ( , ( ] # 여는 괄호를 만나 push
[ ( ] # 닫는 괄호를 만나 pop

-> 이어서 계속
[ ( , ( ] # 여는 괄호를 만나 push
[ ( ] # 닫는 괄호를 만나 pop
[ ] # 닫는 괄호를 만나 pop
[ ] # 닫는 괄호를 만나지 못해서 error

해당 괄호는 오류이다.
마지막에 닫는 괄호가 여는 괄호를 만나지 못했다.
괄호의 짝이 올바르게 이루어지지 않았음을 의미한다.
그렇기 때문에 해당 문장의 괄호는 오류이다.
